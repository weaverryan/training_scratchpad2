diff --git a/app/config/services.yml b/app/config/services.yml
index 5d6ce48..88d953e 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -17,7 +17,12 @@ services:
             # $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
             - [ setAttribute, [3, 2] ]
 
+    app.discount_manager:
+        class: AppBundle\Service\DiscountManager
+        arguments: ['@app.product_repository']
+
     app.product_serialization_subscriber:
         class: AppBundle\Serializer\ProductSerializerSubscriber
+        arguments: ['@app.discount_manager']
         tags:
             - { name: jms_serializer.event_subscriber }
diff --git a/src/AppBundle/Serializer/ProductSerializerSubscriber.php b/src/AppBundle/Serializer/ProductSerializerSubscriber.php
index e8917e0..5c9f8bf 100644
--- a/src/AppBundle/Serializer/ProductSerializerSubscriber.php
+++ b/src/AppBundle/Serializer/ProductSerializerSubscriber.php
@@ -3,12 +3,20 @@
 namespace AppBundle\Serializer;
 
 use AppBundle\Model\Product;
+use AppBundle\Service\DiscountManager;
 use JMS\Serializer\EventDispatcher\EventSubscriberInterface;
 use JMS\Serializer\EventDispatcher\ObjectEvent;
 use JMS\Serializer\JsonSerializationVisitor;
 
 class ProductSerializerSubscriber implements EventSubscriberInterface
 {
+    private $discountManager;
+
+    public function __construct(DiscountManager $discountManager)
+    {
+        $this->discountManager = $discountManager;
+    }
+
     public static function getSubscribedEvents()
     {
         return array(
@@ -24,6 +32,6 @@ class ProductSerializerSubscriber implements EventSubscriberInterface
     {
         /** @var JsonSerializationVisitor $visitor */
         $visitor = $event->getVisitor();
-        $visitor->setData('salesPrice', 1000);
+        $visitor->setData('salesPrice', $this->discountManager->getDiscountedPrice($event->getObject()));
     }
 }
\ No newline at end of file
