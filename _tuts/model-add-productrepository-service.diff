diff --git a/src/AppBundle/Controller/ProductController.php b/src/AppBundle/Controller/ProductController.php
index c03ff5c..2d4e682 100644
--- a/src/AppBundle/Controller/ProductController.php
+++ b/src/AppBundle/Controller/ProductController.php
@@ -3,6 +3,7 @@
 namespace AppBundle\Controller;
 
 use AppBundle\Model\Product;
+use AppBundle\Service\ProductRepository;
 use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
 use Symfony\Bundle\FrameworkBundle\Controller\Controller;
 
@@ -13,15 +14,8 @@ class ProductController extends Controller
      */
     public function indexAction()
     {
-        $pdo = $this->getPDO();
-
-        $stmt = $pdo->prepare('SELECT * FROM product');
-        $stmt->execute();
-        $results = $stmt->fetchAll();
-        $products = [];
-        foreach ($results as $row) {
-            $products[] = $this->hydrateProduct($row);
-        }
+        $productRepo = new ProductRepository();
+        $products = $productRepo->findAll();
 
         return $this->render('product/index.html.twig', [
             'products' => $products
diff --git a/src/AppBundle/Service/ProductRepository.php b/src/AppBundle/Service/ProductRepository.php
new file mode 100644
index 0000000..49fc9c9
--- /dev/null
+++ b/src/AppBundle/Service/ProductRepository.php
@@ -0,0 +1,45 @@
+<?php
+
+namespace AppBundle\Service;
+
+use AppBundle\Model\Product;
+
+class ProductRepository
+{
+    public function findAll()
+    {
+        $pdo = $this->getPDO();
+
+        $stmt = $pdo->prepare('SELECT * FROM product');
+        $stmt->execute();
+        $results = $stmt->fetchAll();
+        $products = [];
+        foreach ($results as $row) {
+            $products[] = $this->hydrateProduct($row);
+        }
+
+        return $products;
+    }
+
+    /**
+     * @return \PDO
+     */
+    private function getPDO()
+    {
+        $pdo = new \PDO('mysql:host=localhost;dbname=chicago_training', 'root');
+        $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
+
+        return $pdo;
+    }
+
+    private function hydrateProduct(array $row)
+    {
+        $product = new Product();
+        $product->setId($row['id']);
+        $product->setName($row['name']);
+        $product->setPrice($row['price']);
+        $product->setDescription($row['description']);
+
+        return $product;
+    }
+}
\ No newline at end of file
